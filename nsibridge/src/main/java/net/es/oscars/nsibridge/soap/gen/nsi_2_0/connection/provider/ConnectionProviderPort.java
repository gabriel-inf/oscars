package net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.provider;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2012-11-01T10:15:38.043-07:00
 * Generated source version: 2.6.1
 * 
 */
@WebService(targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/provider", name = "ConnectionProviderPort")
@XmlSeeAlso({net.es.oscars.nsibridge.soap.gen.nsi_2_0.framework.types.ObjectFactory.class, net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ObjectFactory.class, net.es.oscars.nsibridge.soap.gen.saml.assertion.ObjectFactory.class, net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.ObjectFactory.class, net.es.oscars.nsibridge.soap.gen.nsi_2_0.framework.headers.ObjectFactory.class, net.es.oscars.nsibridge.soap.gen.xmldsig.ObjectFactory.class, net.es.oscars.nsibridge.soap.gen.xmlenc.ObjectFactory.class})
public interface ConnectionProviderPort {

    /**
     * The terminate message is sent from a Requester NSA to a Provider
     * NSA when an existing reservation is to be terminated. The
     * terminateACK indicates that the Provider NSA has accepted the
     * terminate request for processing. A terminateConfirmed or
     * terminateFailed message will be sent asynchronously to the Requester
     * NSA when terminate processing has completed.
     *             
     */
    @RequestWrapper(localName = "terminate", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.GenericRequestType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/terminate")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void terminate(
        @WebParam(name = "connectionId", targetNamespace = "")
        java.lang.String connectionId
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * The provision message is sent from a Requester NSA to a Provider
     * NSA when an existing reservation is to be transitioned into a
     * provisioned state. The provisionACK indicates that the Provider
     * NSA has accepted the provision request for processing. A
     * provisionConfirmed or provisionFailed message will be sent
     * asynchronously to the Requester NSA when provision processing
     * has completed.
     *             
     */
    @RequestWrapper(localName = "provision", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.GenericRequestType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/provision")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void provision(
        @WebParam(name = "connectionId", targetNamespace = "")
        java.lang.String connectionId
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * The reserve message is sent from a Requester NSA to a Provider
     * NSA when a new reservation is being requested. The reserveACK
     * indicates that the Provider NSA has accepted the reservation
     * request for processing. A reserveConfirmed or reserveFailed
     * message will be sent asynchronously to the Requester NSA
     * when reservation processing has completed.
     *             
     */
    @RequestWrapper(localName = "reserve", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.ReserveType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/reserve")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void reserve(
        @WebParam(name = "globalReservationId", targetNamespace = "")
        java.lang.String globalReservationId,
        @WebParam(name = "description", targetNamespace = "")
        java.lang.String description,
        @WebParam(name = "connectionId", targetNamespace = "")
        java.lang.String connectionId,
        @WebParam(name = "criteria", targetNamespace = "")
        net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.ReservationRequestCriteriaType criteria
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * The modifyCancel message is sent from a Requester NSA to a
     * Provider NSA when a cancellation to an existing modify is
     * being requested. The modifyCancelACK indicates that the
     * Provider NSA has accepted the modifyCheck request for
     * processing. A modifyCancelConfirmed or modifyCancelFailed
     * message will be sent asynchronously to the Requester NSA
     * when modifyCancel processing has completed.
     *             
     */
    @RequestWrapper(localName = "modifyCancel", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.GenericRequestType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/modifyCancel")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void modifyCancel(
        @WebParam(name = "connectionId", targetNamespace = "")
        java.lang.String connectionId
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * The release message is sent from a Requester NSA to a Provider NSA
     * when an existing reservation is to be transitioned into a released
     * state. The releaseACK indicates that the Provider NSA has
     * accepted the release request for processing. A releaseConfirmed
     * or releaseFailed message will be sent asynchronously to the
     * Requester NSA when release processing has completed.
     *             
     */
    @RequestWrapper(localName = "release", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.GenericRequestType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/release")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void release(
        @WebParam(name = "connectionId", targetNamespace = "")
        java.lang.String connectionId
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * This queryFailed message is sent from the target NSA to requesting
     * NSA as an indication of a query operation failure. This is in
     * response to an original query request from the associated
     * Requester NSA.
     *             
     */
    @RequestWrapper(localName = "queryFailed", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.QueryFailedType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/queryFailed")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void queryFailed(
        @WebParam(name = "serviceException", targetNamespace = "")
        net.es.oscars.nsibridge.soap.gen.nsi_2_0.framework.types.ServiceExceptionType serviceException
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * This queryConfirmed message is sent from the target NSA to requesting
     * NSA as an indication of a successful query operation. This is in
     * response to an original query request from the associated Requester
     * NSA.
     *             
     */
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", partName = "acknowledgment")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/queryConfirmed")
    public net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType queryConfirmed(
        @WebParam(partName = "queryConfirmed", name = "queryConfirmed", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types")
        net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.QueryConfirmedType queryConfirmed
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * The modifyCheck message is sent from a Requester NSA to a
     * Provider NSA when a modification to an existing reservation is
     * being requested. The modifyCheckACK indicates that the
     * Provider NSA has accepted the modifyCheck request for
     * processing. A modifyCheckConfirmed or modifyCheckFailed
     * message will be sent asynchronously to the Requester NSA
     * when modifyCheck processing has completed.
     *             
     */
    @RequestWrapper(localName = "modifyCheck", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.ModifyCheckType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/modifyCheck")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void modifyCheck(
        @WebParam(name = "connectionId", targetNamespace = "")
        java.lang.String connectionId,
        @WebParam(name = "criteria", targetNamespace = "")
        net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.ModifyRequestCriteriaType criteria
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * The modify message is sent from a Requester NSA to a
     * Provider NSA when a modification to an existing reservation is
     * being committed. The modifyACK indicates that the Provider
     * NSA has accepted the modify request for processing. A
     * modifyConfirmed or modifyFailed message will be sent
     * asynchronously to the Requester NSA when modify processing has
     * completed.
     *             
     */
    @RequestWrapper(localName = "modify", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.GenericRequestType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/modify")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void modify(
        @WebParam(name = "connectionId", targetNamespace = "")
        java.lang.String connectionId
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;

    /**
     * The query message can be sent from either a Provider or Requester NSA
     * to determine the status of existing reservations.  The queryACK
     * indicates that the target NSA has accepted the query request for
     * processing. A queryConfirmed or queryFailed message will be sent
     * asynchronously to the requesting NSA when query processing has
     * completed.
     *             
     */
    @RequestWrapper(localName = "query", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/types", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.QueryType")
    @WebMethod(action = "http://schemas.ogf.org/nsi/2012/03/connection/service/query")
    @ResponseWrapper(localName = "acknowledgment", targetNamespace = "http://schemas.ogf.org/nsi/2012/03/connection/interface", className = "net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.GenericAcknowledgmentType")
    public void query(
        @WebParam(name = "operation", targetNamespace = "")
        net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.QueryOperationType operation,
        @WebParam(name = "queryFilter", targetNamespace = "")
        net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.types.QueryFilterType queryFilter
    ) throws net.es.oscars.nsibridge.soap.gen.nsi_2_0.connection.ifce.ServiceException;
}
