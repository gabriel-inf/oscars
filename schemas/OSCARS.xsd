<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://oscars.es.net/OSCARS"
    elementFormDefault="qualified"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://oscars.es.net/OSCARS"
    xmlns:ctrlp="http://ogf.org/schema/nm/topology/CtrlPlane/20070611/">
    
    <xsd:import namespace="http://ogf.org/schema/nm/topology/CtrlPlane/20070611/" schemaLocation="nmtopo-ctrlp.xsd"/>
    
    <!--
        This is a modification of the type definition schema for the OSCARS public reservation interface. 
        June 2007
    -->

    <!-- Element definitons -->
    <xsd:element name="createReservation" type="tns:resCreateContent" />

    <xsd:element name="createReservationResponse" type="tns:createReply" />

    <xsd:element name="listReservations" type="tns:emptyArg" />

    <xsd:element name="listReservationsResponse" type="tns:listReply" />

    <xsd:element name="cancelReservation" type="tns:resTag" />

    <xsd:element name="cancelReservationResponse" type="xsd:string" />

    <xsd:element name="queryReservation" type="tns:resTag" />

    <xsd:element name="queryReservationResponse" type="tns:resDetails" />
    
    <xsd:element name="getNetworkTopology" type="tns:getTopologyContent" />
    
    <xsd:element name="getNetworkTopologyResponse" type="tns:getTopologyResponseContent" />
    
    <xsd:element name="initiateTopologyPull" type="tns:initiateTopologyPullContent" />
    
    <xsd:element name="initiateTopologyPullResponse" type="tns:initiateTopologyPullResponseContent" />
    
    <xsd:element name="createPath" type="tns:createPathContent" />
    
    <xsd:element name="createPathResponse" type="tns:createPathResponseContent" />
    
    <xsd:element name="refreshPath" type="tns:refreshPathContent" />
    
    <xsd:element name="refreshPathResponse" type="tns:refreshPathResponseContent" />
    
    <xsd:element name="teardownPath" type="tns:teardownPathContent" />
    
    <xsd:element name="teardownPathResponse" type="tns:teardownPathResponseContent" />

    <xsd:element name="forward">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="payload" type="tns:forwardPayload" />
                <xsd:element name="payloadSender" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="forwardResponse" type="tns:forwardReply" />

    <xsd:element name="AAAFault">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="msg" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="BSSFault">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="msg" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="TopologyFault">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="msg" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="SignalFault">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="msg" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <!--  Types  -->
    <xsd:complexType name="resCreateContent">
        <xsd:sequence>
            <xsd:element name="globalSessionId" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="startTime" type="xsd:long" />
            <xsd:element name="endTime" type="xsd:long" />
            <xsd:element name="bandwidth" type="xsd:int" />
            <xsd:element name="burstLimit" type="xsd:int" />
            <xsd:element name="description" type="xsd:string" />
            <xsd:element name="path" type="tns:pathInfo" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="createReply">
        <xsd:sequence>
            <xsd:element name="tag" type="xsd:string" />
            <xsd:element name="globalSessionId" type="xsd:string" />
            <xsd:element name="token" type="xsd:string" />
            <xsd:element name="status" type="xsd:string" />
            <xsd:element name="path" type="tns:explicitPath"
                maxOccurs="1" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="getTopologyContent">
        <xsd:sequence>
            <xsd:element name="topologyType" type="xsd:string" minOccurs="1" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="getTopologyResponseContent">
        <xsd:sequence>
           <!-- nmwg goes here -->
           <xsd:element ref="ctrlp:topology" minOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="initiateTopologyPullContent">
        <xsd:sequence>
            <xsd:element name="topologyType" type="xsd:string" minOccurs="1" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="initiateTopologyPullResponseContent">
        <xsd:sequence>
            <xsd:element name="resultMsg" type="xsd:string" minOccurs="1" />
        </xsd:sequence>
    </xsd:complexType>
    
     <xsd:complexType name="createPathContent">
        <xsd:sequence>
            <xsd:element name="token" type="xsd:string" />
            <xsd:element name="globalSessionId" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="createPathResponseContent">
        <xsd:sequence>
            <xsd:element name="globalSessionId" type="xsd:string" />
            <xsd:element name="status" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="refreshPathContent">
        <xsd:sequence>
            <xsd:element name="token" type="xsd:string" />
            <xsd:element name="globalSessionId" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>
    
   <xsd:complexType name="refreshPathResponseContent">
        <xsd:sequence>
            <xsd:element name="globalSessionId" type="xsd:string" />
            <xsd:element name="status" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="teardownPathContent">
        <xsd:sequence>
            <xsd:element name="token" type="xsd:string" />
            <xsd:element name="globalSessionId" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>
    
   <xsd:complexType name="teardownPathResponseContent">
        <xsd:sequence>
            <xsd:element name="globalSessionId" type="xsd:string"/>
            <xsd:element name="status" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="resDetails">
        <xsd:sequence>
            <xsd:element name="globalSessionId" type="xsd:string" />
	    <xsd:element name="localTag" type="xsd:string" />
            <xsd:element name="status" type="xsd:string" />
            <xsd:element name="startTime" type="xsd:dateTime" />
            <xsd:element name="endTime" type="xsd:dateTime" />
            <xsd:element name="createTime" type="xsd:dateTime" />
            <xsd:element name="bandwidth" type="xsd:int" />
            <xsd:element name="burstLimit" type="xsd:int" />
            <xsd:element name="resClass" type="xsd:string" />
            <xsd:element name="description" type="xsd:string" />
	    <xsd:element name="path" type="tns:pathInfo" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="listReply">
        <xsd:sequence>
	    <!-- up to particular client about how much to display -->
            <xsd:element name="resInfo" type="tns:resDetails"
                maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="forwardPayload">
        <xsd:sequence>
            <xsd:element name="contentType" type="xsd:string" />
            <xsd:element name="createReservation"
                type="tns:resCreateContent" maxOccurs="1" minOccurs="0" />
            <xsd:element name="cancelReservation" type="tns:resTag"
                maxOccurs="1" minOccurs="0" />
            <xsd:element name="queryReservation" type="tns:resTag"
                maxOccurs="1" minOccurs="0" />
            <xsd:element name="listReservations" type="tns:emptyArg"
                maxOccurs="1" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="forwardReply">
        <xsd:sequence>
            <xsd:element name="contentType" type="xsd:string" />
            <xsd:element name="createReservation" type="tns:createReply"
                maxOccurs="1" minOccurs="0" />
            <xsd:element name="cancelReservation" type="xsd:string"
                maxOccurs="1" minOccurs="0" />
            <xsd:element name="queryReservation" type="tns:resDetails"
                maxOccurs="1" minOccurs="0" />
            <xsd:element name="listReservations" type="tns:listReply"
                maxOccurs="1" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="pathInfo">
        <xsd:sequence>
            <xsd:element name="pathSetupMode" type="xsd:string" minOccurs="1" />
            <xsd:element name="reqPath" type="tns:explicitPath"
                maxOccurs="1" minOccurs="0" />

	    <!-- presence of vtag differentiates between layer 2 and layer 3 -->
            <xsd:element name="vtag" type="xsd:string" minOccurs="0"
                maxOccurs="1" />

	    <!-- Ideally would be choice element, but Axis2 1.1.1 doesn't
	    handle them correctly.  Instead, server does error
	    checking. -->
	    <xsd:element name="layer2" type="tns:layer2Info" maxOccurs="1" minOccurs="0" />
	    <xsd:element name="layer3" type="tns:layer3Info" maxOccurs="1" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <!-- Layer 2 params -->
    <xsd:complexType name="layer2Info">
        <xsd:sequence>
            <xsd:element name="srcNodeId" type="xsd:string" />
            <xsd:element name="destNodeId" type="xsd:string" />
            <xsd:element name="srcPortId" type="tns:portIDType" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="destPortId" type="tns:portIDType" maxOccurs="1" minOccurs="0" />
	</xsd:sequence>
    </xsd:complexType>

    <!-- Layer 3 params -->
    <xsd:complexType name="layer3Info">
        <xsd:sequence>
            <xsd:element name="srcHost" type="xsd:string"/>
            <xsd:element name="destHost" type="xsd:string"/>
            <xsd:element name="protocol" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="srcIpPort" type="xsd:int" maxOccurs="1" minOccurs="0" />
            <xsd:element name="destIpPort" type="xsd:int" maxOccurs="1" minOccurs="0" />  
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="explicitPath">
        <xsd:sequence>
            <xsd:element name="hops" type="tns:hopList"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="hopList">
        <xsd:sequence>
             <xsd:element ref="ctrlp:domain" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="portIDType">
        <xsd:attribute name="type" type="xsd:string" use="required" />
        <xsd:attribute name="value" type="xsd:string" use="required" />
    </xsd:complexType>
    
    <!--  Axis2 1.1.1 doesn't handle enumerations correctly.
    <xsd:simpleType name="portIDTypeType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="untagged-port" />
            <xsd:enumeration value="untagged-group" />
            <xsd:enumeration value="tagged-group" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="pathSetupType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="user-xml" />
            <xsd:enumeration value="user-rsvp" />
            <xsd:enumeration value="domain" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="topologyRequestType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="all" />
            <xsd:enumeration value="routerList" />
            <xsd:enumeration value="linkList" />
            <xsd:enumeration value="internetworkLinkList" />
            <xsd:enumeration value="adjacencyNetworkList" />
            <xsd:enumeration value="topologyDelta" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="resStatus">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="PENDING" />
            <xsd:enumeration value="ACTIVE" />
            <xsd:enumeration value="FINISHED" />
            <xsd:enumeration value="CANCELLED" />
            <xsd:enumeration value="FAILED" />
            <xsd:enumeration value="PENDINGCANCEL" />
            <xsd:enumeration value="PRECANCEL" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="resProtocolType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="UDP" />
            <xsd:enumeration value="TCP" />
        </xsd:restriction>
    </xsd:simpleType> -->
    
    <!--  WS1-BP approved way to pass null arguments -->
    <xsd:complexType name="emptyArg">
        <xsd:sequence>
            <xsd:element name="msg" minOccurs="0" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="resTag">
        <xsd:sequence>
            <xsd:element name="tag" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>
</xsd:schema>




