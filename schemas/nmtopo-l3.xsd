<?xml version="1.0" encoding="UTF-8"?>
<!--
  ##############################################################
  
  File: 	nmtopo_l3.rnc - Schema for Layer 3 entities 
  Version: 	$Id$
  Purpose: 	This schema represents entities at Layer 3, or the 
  	Network Layer.
  Reference:	http://books.xmlschemata.org/relaxng/page2.html
  			
  ##############################################################
-->
<!--
  ##############################################################
  Namespace definitions
  ##############################################################
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ggf.org/ns/nmwg/topology/l3/3.0/" xmlns:nmtl3="http://ggf.org/ns/nmwg/topology/l3/3.0/" xmlns:nmtl4="http://ggf.org/ns/nmwg/topology/l4/3.0/" xmlns:CtrlPlane="http://ogf.org/schema/nm/topology/CtrlPlane/20070611/" xmlns:nmwgtopo3="http://ggf.org/ns/nmwg/topology/base/3.0/" xmlns:nmtl2="http://ggf.org/ns/nmwg/topology/l2/3.0/">
  <xs:import namespace="http://ggf.org/ns/nmwg/topology/base/3.0/" schemaLocation="nmtopo_ver3.xsd"/>
  <xs:import namespace="http://ggf.org/ns/nmwg/topology/l2/3.0/" schemaLocation="nmtopo-l2.xsd"/>
  <xs:import namespace="http://ggf.org/ns/nmwg/topology/l4/3.0/" schemaLocation="nmtopo-l4.xsd"/>
  <xs:import namespace="http://ogf.org/schema/nm/topology/CtrlPlane/20070611/" schemaLocation="nmtopo-ctrlp.xsd"/>
  <xs:group name="L3Interface">
    <xs:sequence>
      <xs:element name="interface" type="nmtl3:L3InterfaceContent"/>
    </xs:sequence>
  </xs:group>
  <!--
    We want to have an L2InterfaceIdRef
    but the current tooling doesnt support
    having two attributes of the same name
    (even in different namespaces)
  -->
  <xs:complexType name="L3InterfaceContent">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="nmtl3:ipAddress"/>
      <xs:element ref="nmtl3:netmask"/>
      <xs:element ref="nmtl3:ifName"/>
      <xs:element ref="nmtl3:ifDescription"/>
      <xs:element ref="nmtl3:ifAddress"/>
      <xs:element ref="nmtl3:ifHostName"/>
      <xs:element ref="nmtl3:ifIndex"/>
      <xs:element ref="nmtl3:type"/>
      <xs:element ref="nmtl3:capacity"/>
    </xs:choice>
    <xs:attribute name="interfaceIdRef" type="xs:string"/>
  </xs:complexType>
  <xs:element name="ipAddress">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="nmtl3:L3Address"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="netmask" type="xs:string"/>
  <xs:element name="ifName" type="xs:string"/>
  <xs:element name="ifDescription" type="xs:string"/>
  <xs:element name="ifAddress">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="nmtl3:L3Address"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ifHostName" type="xs:string"/>
  <xs:element name="ifIndex" type="xs:string"/>
  <xs:element name="type" type="xs:string"/>
  <xs:element name="capacity" type="xs:string"/>
  <xs:attributeGroup name="L3Address">
    <xs:attribute name="value" type="xs:string"/>
    <xs:attribute name="type" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:element name="link" type="nmtl3:L3LinkContent"/>
  <!--
    We want to have an L2LinkIdRef
    but the current tooling doesnt support
    having two attributes of the same name
    (even in different namespaces)
  -->
  <xs:complexType name="L3LinkContent">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="nmtl3:index"/>
      <xs:element ref="nmtl3:type"/>
      <xs:element ref="nmtl3:name"/>
      <xs:element ref="nmtl3:globalName"/>
      <xs:choice>
        <xs:group ref="nmtl3:L3Interface"/>
        <xs:element ref="nmtl2:interface"/>
      </xs:choice>
      <xs:choice>
        <xs:element ref="nmtl3:link"/>
        <xs:element ref="nmtl2:link"/>
      </xs:choice>
      <xs:element ref="nmwgtopo3:node"/>
    </xs:choice>
    <xs:attribute name="linkIdRef" type="xs:string"/>
  </xs:complexType>
  <xs:element name="index" type="xs:string"/>
  <xs:element name="name">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="type" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="globalName">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="type" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="network" type="nmtl3:L3NetworkContent"/>
  <xs:complexType name="L3NetworkContent">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="nmtl3:name"/>
      <xs:element ref="nmtl3:type"/>
      <xs:element ref="nmtl3:subnet"/>
      <xs:element ref="nmtl3:netmask"/>
      <xs:element ref="nmtl3:asn"/>
      <xs:choice>
        <xs:group ref="nmtl3:L3Interface"/>
        <xs:element ref="nmtl2:interface"/>
      </xs:choice>
      <xs:choice>
        <xs:element ref="nmtl3:link"/>
        <xs:element ref="nmtl2:link"/>
      </xs:choice>
      <xs:element ref="nmwgtopo3:node"/>
    </xs:choice>
    <xs:attribute name="networkIdRef" type="xs:string"/>
  </xs:complexType>
  <xs:element name="subnet" type="xs:string"/>
  <xs:element name="asn" type="xs:string"/>
  <xs:element name="path" type="nmtl3:L3PathContent"/>
  <xs:complexType name="L3PathContent">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="nmtl2:link"/>
      <xs:element ref="nmtl3:link"/>
    </xs:choice>
    <xs:attribute name="pathIdRef" type="xs:string"/>
  </xs:complexType>
  <xs:group name="L3Role">
    <xs:sequence>
      <xs:element minOccurs="0" ref="nmtl3:role"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="role" type="xs:string"/>
  <xs:attributeGroup name="L3Role">
    <xs:attribute name="role" type="xs:string"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="L3InterfaceIdRef">
    <xs:attribute name="interfaceIdRef" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="L3LinkIdRef">
    <xs:attribute name="linkIdRef" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="L3NetworkIdRef">
    <xs:attribute name="networkIdRef" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="L3PathIdRef">
    <xs:attribute name="pathIdRef" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:element name="interface" type="xs:string"/>
</xs:schema>
