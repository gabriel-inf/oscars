#!/bin/bash
###############################################################################
# USAGE: idc-certsignreq
# 
# Generates a certificate signing request for the currently used certificate in
# OSCARS.jks.
###############################################################################

REPO_PATH=""
if [ -n "$OSCARS_HOME" ]; then
	REPO_PATH="$OSCARS_HOME/conf/axis-tomcat"
elif [ -n "$CATALINA_HOME" ]; then
	REPO_PATH="$CATALINA_HOME/shared/classes/repo"
elif [ -d "./conf/axis-tomcat" ]; then
	REPO_PATH="./conf/axis-tomcat"
elif [ -d "./repo" ]; then
	REPO_PATH="./repo"
else
    echo "ERROR: Unable to find keystore."
    exit 1
fi

KS_PASS=`grep "org.apache.ws.security.crypto.merlin.keystore.password" $REPO_PATH/rampConfig.xml | sed -e 's/\s*<ramp:property name="org\.apache\.ws\.security\.crypto\.merlin\.keystore\.password">\(.*\)<\/ramp:property>/\1/'`;
if [ $? != 0 ]; then
    echo "-- Error while trying to determine keystore password. Please check error message above and try running idc-certsignreq again.";
    exit 1;
fi

echo "-- Using keystore password from $REPO_PATH/rampConfig.xml";
    
CERT_ALIAS=`grep "<ramp:user>.*</ramp:user>" $REPO_PATH/rampConfig.xml | sed -e 's/.*<ramp:user>\(.*\)<\/ramp:user>.*/\1/'`;
if [ $? != 0 ]; then
    echo "-- Error reading certificate alias from '$REPO_PATH/rampConfig.xml'. Please check that file and try running idc-certadd again.";
    exit 1;
fi
echo "-- Using certificate with the alias $CERT_ALIAS"
echo "--- If this is not the correct alias please exit (Ctrl-C) and modify the <ramp:user> tag in rampConfig.xml"

CSR_FILE="";
printf "What filename should I give the CSR?: ";
read CSR_FILE;
#NOTE: ~ doesn't work in file path
keytool -certreq -alias $CERT_ALIAS -keystore $REPO_PATH/OSCARS.jks -storepass $KS_PASS -file $CSR_FILE;
if [ $? != 0 ]; then
    echo "-- Keytool returned an error. Please see error above and try again.";
    exit 1;
fi
echo "-- Certificate Signing Request saved in file $CSR_FILE";