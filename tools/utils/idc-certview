#!/bin/sh
###############################################################################
# USAGE: idc-certview
# 
# Displays a certificate from a chosen keystore
###############################################################################

if [ -z "$CATALINA_HOME" ]; then
	echo "Required environment variable CATALINA_HOME is not set. Please run do_build.sh .";
	exit 1;
fi

KS_PATH="";
KS_PASS="";

while [ 1 ]; do
    echo "Choose the keystore with the certificate you'd like to view:";
    echo "    1. sec-client.jks - stores the private key and certificate used to send messages to other IDCs";
    echo "    2. sec-server.jks - stores certificates trusted to sign incoming messages";
    echo "    3. ssl-keystore.jks - stores SSL certificates of other IDCs running HTTPS";
    
    echo -n "Enter choice: ";
    read OPCHOICE;
    
    if [ "$OPCHOICE" == "1" ]; then
        KS_PATH="$CATALINA_HOME/shared/classes/repo/sec-client";
        break;
    elif [ "$OPCHOICE" == "2" ]; then
        KS_PATH="$CATALINA_HOME/shared/classes/server/sec-server";
        break;
    elif [ "$OPCHOICE" == "3" ]; then
        KS_PATH="$CATALINA_HOME/shared/classes/repo/ssl-keystore";
        KS_PASS="oscars";
        break;
    else
       echo "Invalid choice. Please choose 1, 2, or 3."; 
    fi
done

if [ -z "$KS_PASS" ]; then 
    KS_PASS=`grep "org.apache.ws.security.crypto.merlin.keystore.password" $KS_PATH.properties | sed -e 's/.*org.apache.ws.security.crypto.merlin.keystore.password=\(.*\)/\1/'`;
    if [ $? != 0 ]; then
        echo "-- Error while trying to determine keystore password. Please check error message above and try running idc-certadd again.";
        exit 1;
    fi
fi

CERT_ALIAS="";
CERT_LIST=`keytool -list -keystore $KS_PATH.jks -storepass $KS_PASS | grep "Entry" | sed -e "s/\([a-zA-Z0-9_-]*\),.*/\1/g"`;
if [ $? != 0 ]; then
    echo "-- Error while trying to list certificates in the keystore. Please manually enter the alias of the certificate you'd like to view";
    echo "";
    echo -n "Enter certificate alias: ";
    read CERT_ALIAS;
fi

CERTS=( );
while [ -z "$CERT_ALIAS" ]; do
    CERTS=( );
    COUNT=0;
    echo "";
    echo "Choose the certificate you wish to view:"
    for LINE in $( echo "$CERT_LIST" ); do
        COUNT=`expr $COUNT + 1`;
        echo "    $COUNT. $LINE";
        CERTS[`expr $COUNT - 1`]="$LINE";
    done
    echo -n "Enter choice: ";
    read OPCHOICE;

    if [ -z "$OPCHOICE" ] || [ -z `echo $OPCHOICE | egrep "^[0-9]+$"` ] || [ $OPCHOICE -lt 1 ] || [ $OPCHOICE -gt $COUNT ]; then
        echo "Invalid choice. Please choose a value between 1 and $COUNT."; 
        continue;
    fi

    OPCHOICE=`expr $OPCHOICE - 1`;
    CERT_ALIAS=${CERTS[$OPCHOICE]};
done

echo "";
echo "-- Certificate details"
echo "";
keytool -list -keystore $KS_PATH.jks -storepass $KS_PASS -alias $CERT_ALIAS -V

exit 0;



