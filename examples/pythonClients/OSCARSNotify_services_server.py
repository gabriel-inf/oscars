##################################################
# OSCARSNotify_services_server.py
#      Generated by ZSI.generate.wsdl2dispatch.ServiceModuleWriter
#
##################################################

from OSCARSNotify_services import *
from ZSI.ServiceContainer import ServiceSOAPBinding

class OSCARSNotify(ServiceSOAPBinding):
    soapAction = {}
    root = {}
    _wsdl = """<?xml version=\"1.0\" ?>
<wsdl:definitions name=\"OSCARSNotify\" targetNamespace=\"http://oscars.es.net/OSCARS\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:tns=\"http://oscars.es.net/OSCARS\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:wsnt=\"http://docs.oasis-open.org/wsn/b-2\" xmlns:wsnt-br=\"http://docs.oasis-open.org/wsn/br-2\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">

    <wsdl:documentation>
        This is WSDL for the OSCARS public reservation interface. These
        messages must be signed using the following WS-secuirty
        standards. The message is time stamped and includes the X.509
        certificate of the signing entity. The timestamp, certificate
        and message body are all signed. DRAFT V1.0 Nov 2006
    </wsdl:documentation>

    <!-- Element definitons -->
    <wsdl:types>
        <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://oscars.es.net/OSCARS\" xmlns:tns=\"http://oscars.es.net/OSCARS\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">
            
        

    <xsd:import namespace=\"http://ogf.org/schema/network/topology/ctrlPlane/20070626/\" schemaLocation=\"nmtopo-ctrlp.xsd\"/>

    <!-- Element definitions -->
    <xsd:element name=\"createReservation\" type=\"tns:resCreateContent\"/>

    <xsd:element name=\"createReservationResponse\" type=\"tns:createReply\"/>

    <xsd:element name=\"listReservations\" type=\"tns:listRequest\"/>

    <xsd:element name=\"listReservationsResponse\" type=\"tns:listReply\"/>

    <xsd:element name=\"cancelReservation\" type=\"tns:globalReservationId\"/>

    <xsd:element name=\"cancelReservationResponse\" type=\"xsd:string\"/>

    <xsd:element name=\"modifyReservation\" type=\"tns:modifyResContent\"/>

    <xsd:element name=\"modifyReservationResponse\" type=\"tns:modifyResReply\"/>

    <xsd:element name=\"queryReservation\" type=\"tns:globalReservationId\"/>

    <xsd:element name=\"queryReservationResponse\" type=\"tns:resDetails\"/>

    <xsd:element name=\"getNetworkTopology\" type=\"tns:getTopologyContent\"/>

    <xsd:element name=\"getNetworkTopologyResponse\" type=\"tns:getTopologyResponseContent\"/>

    <xsd:element name=\"initiateTopologyPull\" type=\"tns:initiateTopologyPullContent\"/>

    <xsd:element name=\"initiateTopologyPullResponse\" type=\"tns:initiateTopologyPullResponseContent\"/>

    <xsd:element name=\"createPath\" type=\"tns:createPathContent\"/>

    <xsd:element name=\"createPathResponse\" type=\"tns:createPathResponseContent\"/>

    <xsd:element name=\"refreshPath\" type=\"tns:refreshPathContent\"/>

    <xsd:element name=\"refreshPathResponse\" type=\"tns:refreshPathResponseContent\"/>

    <xsd:element name=\"teardownPath\" type=\"tns:teardownPathContent\"/>

    <xsd:element name=\"teardownPathResponse\" type=\"tns:teardownPathResponseContent\"/>

    <xsd:element name=\"forward\">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=\"payload\" type=\"tns:forwardPayload\"/>
                <xsd:element name=\"payloadSender\" type=\"xsd:string\"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name=\"forwardResponse\" type=\"tns:forwardReply\"/>

    <xsd:element name=\"AAAFault\">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=\"msg\" type=\"xsd:string\"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name=\"BSSFault\">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=\"msg\" type=\"xsd:string\"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name=\"TopologyFault\">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=\"msg\" type=\"xsd:string\"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name=\"SignalFault\">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=\"msg\" type=\"xsd:string\"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <!--  Types  -->
    <xsd:complexType name=\"resCreateContent\">
        <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"globalReservationId\" type=\"xsd:string\"/>
            <xsd:element name=\"startTime\" type=\"xsd:long\"/>
            <xsd:element name=\"endTime\" type=\"xsd:long\"/>
            <xsd:element name=\"bandwidth\" type=\"xsd:int\"/>
            <xsd:element name=\"description\" type=\"xsd:string\"/>
            <xsd:element name=\"pathInfo\" type=\"tns:pathInfo\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"createReply\">
        <xsd:sequence>
            <xsd:element name=\"globalReservationId\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"token\" type=\"xsd:string\"/>
            <xsd:element name=\"status\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"pathInfo\" type=\"tns:pathInfo\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"modifyResContent\">
        <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"1\" name=\"globalReservationId\" type=\"xsd:string\"/>
            <xsd:element name=\"startTime\" type=\"xsd:long\"/>
            <xsd:element name=\"endTime\" type=\"xsd:long\"/>
            <xsd:element name=\"bandwidth\" type=\"xsd:int\"/>
            <xsd:element name=\"description\" type=\"xsd:string\"/>
            <xsd:element name=\"pathInfo\" type=\"tns:pathInfo\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"modifyResReply\">
        <xsd:sequence>
            <xsd:element name=\"reservation\" type=\"tns:resDetails\"/>
        </xsd:sequence>
    </xsd:complexType>


    <xsd:complexType name=\"getTopologyContent\">
        <xsd:sequence>
            <xsd:element minOccurs=\"1\" name=\"topologyType\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"getTopologyResponseContent\">
        <xsd:sequence>
           <!-- nmwg goes here -->
           <xsd:element minOccurs=\"1\" ref=\"ctrlp:topology\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"initiateTopologyPullContent\">
        <xsd:sequence>
            <xsd:element minOccurs=\"1\" name=\"topologyType\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"initiateTopologyPullResponseContent\">
        <xsd:sequence>
            <xsd:element minOccurs=\"1\" name=\"resultMsg\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

     <xsd:complexType name=\"createPathContent\">
        <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"token\" type=\"xsd:string\"/>
            <xsd:element name=\"globalReservationId\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"createPathResponseContent\">
        <xsd:sequence>
            <xsd:element name=\"globalReservationId\" type=\"xsd:string\"/>
            <xsd:element name=\"status\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"refreshPathContent\">
        <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"token\" type=\"xsd:string\"/>
            <xsd:element name=\"globalReservationId\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

   <xsd:complexType name=\"refreshPathResponseContent\">
        <xsd:sequence>
            <xsd:element name=\"globalReservationId\" type=\"xsd:string\"/>
            <xsd:element name=\"status\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"teardownPathContent\">
        <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"token\" type=\"xsd:string\"/>
            <xsd:element name=\"globalReservationId\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

   <xsd:complexType name=\"teardownPathResponseContent\">
        <xsd:sequence>
            <xsd:element name=\"globalReservationId\" type=\"xsd:string\"/>
            <xsd:element name=\"status\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"resDetails\">
        <xsd:sequence>
            <xsd:element name=\"globalReservationId\" type=\"xsd:string\"/>
            <xsd:element name=\"login\" type=\"xsd:string\"/>
            <xsd:element name=\"status\" type=\"xsd:string\"/>
            <xsd:element name=\"startTime\" type=\"xsd:long\"/>
            <xsd:element name=\"endTime\" type=\"xsd:long\"/>
            <xsd:element name=\"createTime\" type=\"xsd:long\"/>
            <xsd:element name=\"bandwidth\" type=\"xsd:int\"/>
            <xsd:element name=\"description\" type=\"xsd:string\"/>
            <xsd:element name=\"pathInfo\" type=\"tns:pathInfo\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"listRequest\">
       <xsd:sequence>
           <!--  one or more of ALL, ACTIVE, PENDING, FINISHED, CANCELLED, FAILED  -->
           <xsd:element maxOccurs=\"5\" minOccurs=\"0\" name=\"resStatus\" type=\"xsd:string\"/>
           <xsd:sequence maxOccurs=\"1\" minOccurs=\"0\">
              <xsd:element name=\"startTime\" type=\"xsd:long\"/>
              <xsd:element name=\"endTime\" type=\"xsd:long\"/>
           </xsd:sequence>
           <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"description\" type=\"xsd:string\"/>
           <xsd:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"linkId\" type=\"xsd:string\"/>
           <xsd:element minOccurs=\"0\" name=\"resRequested\" type=\"xsd:int\"/>
           <xsd:element minOccurs=\"0\" name=\"resOffset\" type=\"xsd:int\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"listReply\">
        <xsd:sequence>
            <!-- up to particular client about how much to display -->
            <xsd:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"resDetails\" type=\"tns:resDetails\"/>
            <xsd:element minOccurs=\"0\" name=\"totalResults\" type=\"xsd:int\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"forwardPayload\">
        <xsd:sequence>
            <xsd:element name=\"contentType\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"createReservation\" type=\"tns:resCreateContent\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"modifyReservation\" type=\"tns:modifyResContent\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"cancelReservation\" type=\"tns:globalReservationId\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"queryReservation\" type=\"tns:globalReservationId\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"listReservations\" type=\"tns:listRequest\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"createPath\" type=\"tns:createPathContent\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"refreshPath\" type=\"tns:refreshPathContent\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"teardownPath\" type=\"tns:teardownPathContent\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"forwardReply\">
        <xsd:sequence>
            <xsd:element name=\"contentType\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"createReservation\" type=\"tns:createReply\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"modifyReservation\" type=\"tns:modifyResReply\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"cancelReservation\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"queryReservation\" type=\"tns:resDetails\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"listReservations\" type=\"tns:listReply\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"createPath\" type=\"tns:createPathResponseContent\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"refreshPath\" type=\"tns:refreshPathResponseContent\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"teardownPath\" type=\"tns:teardownPathResponseContent\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"pathInfo\">
        <xsd:sequence>
            <xsd:element minOccurs=\"1\" name=\"pathSetupMode\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"pathType\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"path\" type=\"ctrlp:CtrlPlanePathContent\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"layer2Info\" type=\"tns:layer2Info\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"layer3Info\" type=\"tns:layer3Info\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"mplsInfo\" type=\"tns:mplsInfo\"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- Layer 2 elements -->
    <xsd:complexType name=\"layer2Info\">
        <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"srcVtag\" type=\"tns:vlanTag\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"destVtag\" type=\"tns:vlanTag\"/>
            <xsd:element name=\"srcEndpoint\" type=\"xsd:string\"/>
            <xsd:element name=\"destEndpoint\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- Layer 3 elements -->
    <xsd:complexType name=\"layer3Info\">
        <xsd:sequence>
            <xsd:element name=\"srcHost\" type=\"xsd:string\"/>
            <xsd:element name=\"destHost\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"protocol\" type=\"xsd:string\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"srcIpPort\" type=\"xsd:int\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"destIpPort\" type=\"xsd:int\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"dscp\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- MPLS-specific elements -->
    <xsd:complexType name=\"mplsInfo\">
        <xsd:sequence>
            <xsd:element name=\"burstLimit\" type=\"xsd:int\"/>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"lspClass\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- VLAN tag element -->
    <xsd:complexType name=\"vlanTag\">
         <xsd:simpleContent>
             <xsd:extension base=\"xsd:string\">
                 <xsd:attribute name=\"tagged\" type=\"xsd:boolean\" use=\"optional\"/>
             </xsd:extension>
         </xsd:simpleContent>
    </xsd:complexType>

    <!--  Axis2 1.1.1 doesn't handle enumerations correctly.
    <xsd:simpleType name=\"portIDTypeType\">
        <xsd:restriction base=\"xsd:string\">
            <xsd:enumeration value=\"untagged-port\" />
            <xsd:enumeration value=\"untagged-group\" />
            <xsd:enumeration value=\"tagged-group\" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name=\"pathSetupType\">
        <xsd:restriction base=\"xsd:string\">
            <xsd:enumeration value=\"signal-xml\" />
            <xsd:enumeration value=\"signal-rsvp\" />
            <xsd:enumeration value=\"timer-automatic\" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name=\"topologyRequestType\">
        <xsd:restriction base=\"xsd:string\">
            <xsd:enumeration value=\"all\" />
            <xsd:enumeration value=\"routerList\" />
            <xsd:enumeration value=\"linkList\" />
            <xsd:enumeration value=\"internetworkLinkList\" />
            <xsd:enumeration value=\"adjacencyNetworkList\" />
            <xsd:enumeration value=\"topologyDelta\" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name=\"resStatus\">
        <xsd:restriction base=\"xsd:string\">
            <xsd:enumeration value=\"PENDING\" />
            <xsd:enumeration value=\"ACTIVE\" />
            <xsd:enumeration value=\"FINISHED\" />
            <xsd:enumeration value=\"CANCELLED\" />
            <xsd:enumeration value=\"FAILED\" />
            <xsd:enumeration value=\"PENDINGCANCEL\" />
            <xsd:enumeration value=\"PRECANCEL\" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name=\"resProtocolType\">
        <xsd:restriction base=\"xsd:string\">
            <xsd:enumeration value=\"UDP\" />
            <xsd:enumeration value=\"TCP\" />
        </xsd:restriction>
    </xsd:simpleType> -->

    <!--  WS1-BP approved way to pass null arguments -->
    <xsd:complexType name=\"emptyArg\">
        <xsd:sequence>
            <xsd:element minOccurs=\"0\" name=\"msg\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=\"globalReservationId\">
        <xsd:sequence>
            <xsd:element name=\"gri\" type=\"xsd:string\"/>
        </xsd:sequence>
    </xsd:complexType>
</xsd:schema>
        <xsd:schema>
            <xsd:import namespace=\"http://docs.oasis-open.org/wsn/b-2\" schemaLocation=\"b-2-idc.xsd\"/>
        </xsd:schema>
        <xsd:schema>
            <xsd:import namespace=\"http://docs.oasis-open.org/wsn/br-2\" schemaLocation=\"br-2-idc.xsd\"/>
        </xsd:schema>
    </wsdl:types>

    <!--   Message definitions -->
    <!-- ================ NotificationConsumer::Notify ================ 
      Notify(
        NotificationMessage
          (SubscriptionReference, TopicExpression, ProducerReference,
           Message)*
      returns: n/a (one way)
    -->
    <wsdl:message name=\"Notify\">
        <wsdl:part element=\"wsnt:Notify\" name=\"Notify\"/>
    </wsdl:message>
    
    <!-- ============== NotificationProducer::Subscribe =============== 
      Subscribe(
       (ConsumerEndpointReference, [Filter], [SubscriptionPolicy], 
       [InitialTerminationTime])   
      returns: WS-Resource qualified EPR to a Subscription
    -->
    <wsdl:message name=\"SubscribeRequest\">
        <wsdl:part element=\"wsnt:Subscribe\" name=\"SubscribeRequest\"/>
    </wsdl:message>
    
    <wsdl:message name=\"SubscribeResponse\">
        <wsdl:part element=\"wsnt:SubscribeResponse\" name=\"SubscribeResponse\"/>
    </wsdl:message>
    
    <wsdl:message name=\"SubscribeCreationFailedFault\">
        <wsdl:part element=\"wsnt:SubscribeCreationFailedFault\" name=\"SubscribeCreationFailedFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"TopicExpressionDialectUnknownFault\">
        <wsdl:part element=\"wsnt:TopicExpressionDialectUnknownFault\" name=\"TopicExpressionDialectUnknownFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"InvalidFilterFault\">
        <wsdl:part element=\"wsnt:InvalidFilterFault\" name=\"InvalidFilterFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"InvalidProducerPropertiesExpressionFault\">
        <wsdl:part element=\"wsnt:InvalidProducerPropertiesExpressionFault\" name=\"InvalidProducerPropertiesExpressionFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"InvalidMessageContentExpressionFault\">
        <wsdl:part element=\"wsnt:InvalidMessageContentExpressionFault\" name=\"InvalidMessageContentExpressionFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"UnrecognizedPolicyRequestFault\">
        <wsdl:part element=\"wsnt:UnrecognizedPolicyRequestFault\" name=\"UnrecognizedPolicyRequestFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"UnsupportedPolicyRequestFault\">
        <wsdl:part element=\"wsnt:UnsupportedPolicyRequestFault\" name=\"UnsupportedPolicyRequestFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"NotifyMessageNotSupportedFault\">
        <wsdl:part element=\"wsnt:NotifyMessageNotSupportedFault\" name=\"NotifyMessageNotSupportedFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"UnacceptableInitialTerminationTimeFault\">
        <wsdl:part element=\"wsnt:UnacceptableInitialTerminationTimeFault\" name=\"UnacceptableInitialTerminationTimeFault\"/>
    </wsdl:message> 
   
   <wsdl:message name=\"InvalidTopicExpressionFault\">
        <wsdl:part element=\"wsnt:InvalidTopicExpressionFault\" name=\"InvalidTopicExpressionFault\"/>
    </wsdl:message> 
    
    <wsdl:message name=\"TopicNotSupportedFault\">
        <wsdl:part element=\"wsnt:TopicNotSupportedFault\" name=\"TopicNotSupportedFault\"/>
    </wsdl:message> 
    
    <!-- ================ SubscriptionManager::Renew ==================
       Renew( Duration | AbsoluteTime)
       returns: (New Termination Time [CurrentTime])
    -->
    <wsdl:message name=\"RenewRequest\">
        <wsdl:part element=\"wsnt:Renew\" name=\"RenewRequest\"/>
    </wsdl:message>
    
    <wsdl:message name=\"RenewResponse\">
        <wsdl:part element=\"wsnt:RenewResponse\" name=\"RenewResponse\"/>
    </wsdl:message>
    
    <wsdl:message name=\"UnacceptableTerminationTimeFault\">
        <wsdl:part element=\"wsnt:UnacceptableTerminationTimeFault\" name=\"UnacceptableTerminationTimeFault\"/>
    </wsdl:message>
    
    <!-- ============== SubscriptionManager::Unsubscribe ===============
       Unsubscribe()
       returns: empty
    -->
    <wsdl:message name=\"UnsubscribeRequest\">
        <wsdl:part element=\"wsnt:Unsubscribe\" name=\"UnsubscribeRequest\"/>
    </wsdl:message>
    
    <wsdl:message name=\"UnsubscribeResponse\">
        <wsdl:part element=\"wsnt:UnsubscribeResponse\" name=\"UnsubscribeResponse\"/>
    </wsdl:message>
    
    <wsdl:message name=\"UnableToDestroySubscriptionFault\">
        <wsdl:part element=\"wsnt:UnableToDestroySubscriptionFault\" name=\"UnableToDestroySubscriptionFault\"/>
    </wsdl:message>
    
    <!-- ========== SubscriptionManager::PauseSubscription ============
       PauseSubscription()
       returns: empty
    -->
    <wsdl:message name=\"PauseSubscriptionRequest\">
        <wsdl:part element=\"wsnt:PauseSubscription\" name=\"PauseSubscriptionRequest\"/>
    </wsdl:message>
    
    <wsdl:message name=\"PauseSubscriptionResponse\">
        <wsdl:part element=\"wsnt:PauseSubscriptionResponse\" name=\"PauseSubscriptionResponse\"/>
    </wsdl:message>
    
    <wsdl:message name=\"PauseFailedFault\">
        <wsdl:part element=\"wsnt:PauseFailedFault\" name=\"PauseFailedFault\"/>
    </wsdl:message>

    <!-- ========= SubscriptionManager::ResumeSubscription ============
       ResumeSubscription()
       returns: empty
    -->
    <wsdl:message name=\"ResumeSubscriptionRequest\">
        <wsdl:part element=\"wsnt:ResumeSubscription\" name=\"ResumeSubscriptionRequest\"/>
    </wsdl:message>
    
    <wsdl:message name=\"ResumeSubscriptionResponse\">
        <wsdl:part element=\"wsnt:ResumeSubscriptionResponse\" name=\"ResumeSubscriptionResponse\"/>
    </wsdl:message>
    
    <wsdl:message name=\"ResumeFailedFault\">
        <wsdl:part element=\"wsnt:ResumeFailedFault\" name=\"ResumeFailedFault\"/>
    </wsdl:message>
    
    <wsdl:message name=\"AAAFaultMessage\">
        <wsdl:part element=\"tns:AAAFault\" name=\"fault\"/>
    </wsdl:message>
    
    <!-- ========== NotificationBroker::RegisterPublisher =============
   RegisterPublisher(PublisherReference, TopicExpression* ,
                     [Demand], [InitialTerminationTime])
   returns: WS-Resource qualified EPR to a PublisherRegistration --> 
   <wsdl:message name=\"RegisterPublisherRequest\">
      <wsdl:part element=\"wsnt-br:RegisterPublisher\" name=\"RegisterPublisherRequest\"/>
   </wsdl:message>

   <wsdl:message name=\"RegisterPublisherResponse\">
      <wsdl:part element=\"wsnt-br:RegisterPublisherResponse\" name=\"RegisterPublisherResponse\"/>
   </wsdl:message>
      
   <wsdl:message name=\"PublisherRegistrationRejectedFault\">
      <wsdl:part element=\"wsnt-br:PublisherRegistrationRejectedFault\" name=\"PublisherRegistrationRejectedFault\"/>
   </wsdl:message> 

   <wsdl:message name=\"PublisherRegistrationFailedFault\">
      <wsdl:part element=\"wsnt-br:PublisherRegistrationFailedFault\" name=\"PublisherRegistrationFailedFault\"/>
   </wsdl:message> 

   <wsdl:message name=\"DestroyRegistrationRequest\">
      <wsdl:part element=\"wsnt-br:DestroyRegistration\" name=\"DestroyRegistrationRequest\"/>
   </wsdl:message>

   <wsdl:message name=\"DestroyRegistrationResponse\">
      <wsdl:part element=\"wsnt-br:DestroyRegistrationResponse\" name=\"DestroyRegistrationResponse\"/>
   </wsdl:message>

   <wsdl:message name=\"ResourceNotDestroyedFault\">
      <wsdl:part element=\"wsnt-br:ResourceNotDestroyedFault\" name=\"ResourceNotDestroyedFault\"/>
   </wsdl:message> 

    
    <wsdl:portType name=\"OSCARSNotify\">
        <wsdl:operation name=\"Notify\">
            <wsdl:input message=\"tns:Notify\"/>
        </wsdl:operation>
        
        <wsdl:operation name=\"Subscribe\">
            <wsdl:input message=\"tns:SubscribeRequest\"/>
            <wsdl:output message=\"tns:SubscribeResponse\"/>
            <wsdl:fault message=\"tns:InvalidFilterFault\" name=\"InvalidFilterFault\"/>
            <wsdl:fault message=\"tns:TopicExpressionDialectUnknownFault\" name=\"TopicExpressionDialectUnknownFault\"/>
            <wsdl:fault message=\"tns:InvalidTopicExpressionFault\" name=\"InvalidTopicExpressionFault\"/>
            <wsdl:fault message=\"tns:TopicNotSupportedFault\" name=\"TopicNotSupportedFault\"/>
            <wsdl:fault message=\"tns:InvalidProducerPropertiesExpressionFault\" name=\"InvalidProducerPropertiesExpressionFault\"/>
            <wsdl:fault message=\"tns:InvalidMessageContentExpressionFault\" name=\"InvalidMessageContentExpressionFault\"/>
            <wsdl:fault message=\"tns:UnacceptableInitialTerminationTimeFault\" name=\"UnacceptableInitialTerminationTimeFault\"/>
            <wsdl:fault message=\"tns:UnrecognizedPolicyRequestFault\" name=\"UnrecognizedPolicyRequestFault\"/>
            <wsdl:fault message=\"tns:UnsupportedPolicyRequestFault\" name=\"UnsupportedPolicyRequestFault\"/>
            <wsdl:fault message=\"tns:NotifyMessageNotSupportedFault\" name=\"NotifyMessageNotSupportedFault\"/>
            <wsdl:fault message=\"tns:SubscribeCreationFailedFault\" name=\"SubscribeCreationFailedFault\"/>
            <wsdl:fault message=\"tns:AAAFaultMessage\" name=\"AAAErrorException\"/>
        </wsdl:operation>
        
        <wsdl:operation name=\"Renew\">
            <wsdl:input message=\"tns:RenewRequest\" name=\"RenewRequest\"/>
            <wsdl:output message=\"tns:RenewResponse\" name=\"RenewResponse\"/>
            <wsdl:fault message=\"tns:UnacceptableTerminationTimeFault\" name=\"UnacceptableTerminationTimeFault\"/>    
            <wsdl:fault message=\"tns:AAAFaultMessage\" name=\"AAAErrorException\"/>
        </wsdl:operation>
        
        <wsdl:operation name=\"Unsubscribe\">
            <wsdl:input message=\"tns:UnsubscribeRequest\" name=\"UnsubscribeRequest\"/>
            <wsdl:output message=\"tns:UnsubscribeResponse\" name=\"UnsubscribeResponse\"/>
            <wsdl:fault message=\"tns:UnableToDestroySubscriptionFault\" name=\"UnableToDestroySubscriptionFault\"/>
            <wsdl:fault message=\"tns:AAAFaultMessage\" name=\"AAAErrorException\"/>
        </wsdl:operation>
        
        <wsdl:operation name=\"PauseSubscription\">
            <wsdl:input message=\"tns:PauseSubscriptionRequest\"/>
            <wsdl:output message=\"tns:PauseSubscriptionResponse\"/>
            <wsdl:fault message=\"tns:PauseFailedFault\" name=\"PauseFailedFault\"/>     
            <wsdl:fault message=\"tns:AAAFaultMessage\" name=\"AAAErrorException\"/>
        </wsdl:operation>
        
        <wsdl:operation name=\"ResumeSubscription\">
            <wsdl:input message=\"tns:ResumeSubscriptionRequest\"/>
            <wsdl:output message=\"tns:ResumeSubscriptionResponse\"/>
            <wsdl:fault message=\"tns:ResumeFailedFault\" name=\"ResumeFailedFault\"/>   
            <wsdl:fault message=\"tns:AAAFaultMessage\" name=\"AAAErrorException\"/>
        </wsdl:operation>
        
        <wsdl:operation name=\"RegisterPublisher\">
            <wsdl:input message=\"tns:RegisterPublisherRequest\"/>
            <wsdl:output message=\"tns:RegisterPublisherResponse\"/>
            <wsdl:fault message=\"tns:InvalidTopicExpressionFault\" name=\"InvalidTopicExpressionFault\"/>
            <wsdl:fault message=\"tns:TopicNotSupportedFault\" name=\"TopicNotSupportedFault\"/>
            <wsdl:fault message=\"tns:PublisherRegistrationRejectedFault\" name=\"PublisherRegistrationRejectedFault\"/>
            <wsdl:fault message=\"tns:PublisherRegistrationFailedFault\" name=\"PublisherRegistrationFailedFault\"/>
            <wsdl:fault message=\"tns:UnacceptableInitialTerminationTimeFault\" name=\"UnacceptableInitialTerminationTimeFault\"/>
        </wsdl:operation>
        
        <wsdl:operation name=\"DestroyRegistration\">
            <wsdl:input message=\"tns:DestroyRegistrationRequest\" name=\"DestroyRegistrationRequest\"/>
            <wsdl:output message=\"tns:DestroyRegistrationResponse\" name=\"DestroyRegistrationResponse\"/>
            <wsdl:fault message=\"tns:ResourceNotDestroyedFault\" name=\"ResourceNotDestroyedFault\"/>
        </wsdl:operation>
        
    </wsdl:portType>

    <wsdl:binding name=\"OSCARSNOTIFYSOAP\" type=\"tns:OSCARSNotify\">
        <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>
            
        <wsdl:operation name=\"Notify\">
            <soap:operation soapAction=\"http://oscars.es.net/OSCARS/Notify\"/>
            <wsdl:input>
                <soap:body parts=\"Notify\" use=\"literal\"/>
            </wsdl:input>
        </wsdl:operation>
        
        <wsdl:operation name=\"Subscribe\">
            <soap:operation soapAction=\"http://oscars.es.net/OSCARS/Subscribe\" style=\"document\"/>
            <wsdl:input>
                <soap:body parts=\"SubscribeRequest\" use=\"literal\"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body parts=\"SubscribeResponse\" use=\"literal\"/>
            </wsdl:output>
            <wsdl:fault name=\"InvalidFilterFault\">
                <soap:fault name=\"InvalidFilterFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"TopicExpressionDialectUnknownFault\">
                <soap:fault name=\"TopicExpressionDialectUnknownFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"InvalidTopicExpressionFault\">
                <soap:fault name=\"InvalidTopicExpressionFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"TopicNotSupportedFault\">
                <soap:fault name=\"TopicNotSupportedFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"InvalidProducerPropertiesExpressionFault\">
                <soap:fault name=\"InvalidProducerPropertiesExpressionFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"InvalidMessageContentExpressionFault\">
                <soap:fault name=\"InvalidMessageContentExpressionFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"UnacceptableInitialTerminationTimeFault\">
                <soap:fault name=\"UnacceptableInitialTerminationTimeFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"UnrecognizedPolicyRequestFault\">
                <soap:fault name=\"InvalidProducerPropertiesExpressionFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"UnsupportedPolicyRequestFault\">
                <soap:fault name=\"UnsupportedPolicyRequestFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"NotifyMessageNotSupportedFault\">
                <soap:fault name=\"NotifyMessageNotSupportedFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"SubscribeCreationFailedFault\">
                <soap:fault name=\"SubscribeCreationFailedFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"AAAErrorException\">
                <soap:fault name=\"AAAErrorException\" use=\"literal\"/>
            </wsdl:fault>
        </wsdl:operation>
        
        <wsdl:operation name=\"Renew\">
            <soap:operation soapAction=\"http://oscars.es.net/OSCARS/Renew\" style=\"document\"/>
            <wsdl:input>
                <soap:body parts=\"RenewRequest\" use=\"literal\"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body parts=\"RenewResponse\" use=\"literal\"/>
            </wsdl:output>
            <wsdl:fault name=\"UnacceptableTerminationTimeFault\">
                <soap:fault name=\"UnacceptableTerminationTimeFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"AAAErrorException\">
                <soap:fault name=\"AAAErrorException\" use=\"literal\"/>
            </wsdl:fault>
        </wsdl:operation>
        
        <wsdl:operation name=\"Unsubscribe\">
            <soap:operation soapAction=\"http://oscars.es.net/OSCARS/Unsubscribe\" style=\"document\"/>
            <wsdl:input>
                <soap:body parts=\"UnsubscribeRequest\" use=\"literal\"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body parts=\"UnsubscribeResponse\" use=\"literal\"/>
            </wsdl:output>
            <wsdl:fault name=\"UnableToDestroySubscriptionFault\">
                <soap:fault name=\"UnableToDestroySubscriptionFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"AAAErrorException\">
                <soap:fault name=\"AAAErrorException\" use=\"literal\"/>
            </wsdl:fault>
        </wsdl:operation>
        
        <wsdl:operation name=\"PauseSubscription\">
            <soap:operation soapAction=\"http://oscars.es.net/OSCARS/PauseSubscription\" style=\"document\"/>
            <wsdl:input>
                <soap:body parts=\"PauseSubscriptionRequest\" use=\"literal\"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body parts=\"PauseSubscriptionResponse\" use=\"literal\"/>
            </wsdl:output>
            <wsdl:fault name=\"PauseFailedFault\">
                <soap:fault name=\"PauseFailedFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"AAAErrorException\">
                <soap:fault name=\"AAAErrorException\" use=\"literal\"/>
            </wsdl:fault>
        </wsdl:operation>
        
        <wsdl:operation name=\"ResumeSubscription\">
            <soap:operation soapAction=\"http://oscars.es.net/OSCARS/ResumeSubscription\" style=\"document\"/>
            <wsdl:input>
                <soap:body parts=\"ResumeSubscriptionRequest\" use=\"literal\"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body parts=\"ResumeSubscriptionResponse\" use=\"literal\"/>
            </wsdl:output>
            <wsdl:fault name=\"ResumeFailedFault\">
                <soap:fault name=\"ResumeFailedFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"AAAErrorException\">
                <soap:fault name=\"AAAErrorException\" use=\"literal\"/>
            </wsdl:fault>
        </wsdl:operation>
        
        <wsdl:operation name=\"RegisterPublisher\">
            <soap:operation soapAction=\"http://oscars.es.net/OSCARS/RegisterPublisher\" style=\"document\"/>
            <wsdl:input>
                <soap:body parts=\"RegisterPublisherRequest\" use=\"literal\"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body parts=\"RegisterPublisherResponse\" use=\"literal\"/>
            </wsdl:output>
            <wsdl:fault name=\"InvalidTopicExpressionFault\">
                <soap:fault name=\"InvalidTopicExpressionFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"TopicNotSupportedFault\">
                <soap:fault name=\"TopicNotSupportedFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"PublisherRegistrationRejectedFault\">
                <soap:fault name=\"PublisherRegistrationRejectedFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"PublisherRegistrationFailedFault\">
                <soap:fault name=\"PublisherRegistrationFailedFault\" use=\"literal\"/>
            </wsdl:fault>
            <wsdl:fault name=\"UnacceptableInitialTerminationTimeFault\">
                <soap:fault name=\"UnacceptableInitialTerminationTimeFault\" use=\"literal\"/>
            </wsdl:fault>
        </wsdl:operation>

        <wsdl:operation name=\"DestroyRegistration\">
            <soap:operation soapAction=\"http://oscars.es.net/OSCARS/DestroyRegistration\" style=\"document\"/>
            <wsdl:input>
                <soap:body parts=\"DestroyRegistrationRequest\" use=\"literal\"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body parts=\"DestroyRegistrationResponse\" use=\"literal\"/>
            </wsdl:output>
            <wsdl:fault name=\"ResourceNotDestroyedFault\">
                <soap:fault name=\"ResourceNotDestroyedFault\" use=\"literal\"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>

    <wsdl:service name=\"OSCARSNotify\">
        <wsdl:port binding=\"tns:OSCARSNOTIFYSOAP\" name=\"OSCARSNotify\">
            <soap:address location=\"https://oscars-dev.es.net:9090/axis2/services/OSCARSNotify\"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>"""

    def __init__(self, post='/axis2/services/OSCARSNotify', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_Notify(self, ps):
        self.request = ps.Parse(Notify.typecode)
        # NO output
        return None

    soapAction['http://oscars.es.net/OSCARS/Notify'] = 'soap_Notify'
    root[(Notify.typecode.nspname,Notify.typecode.pname)] = 'soap_Notify'

    def soap_Subscribe(self, ps):
        self.request = ps.Parse(SubscribeRequest.typecode)
        return SubscribeResponse()

    soapAction['http://oscars.es.net/OSCARS/Subscribe'] = 'soap_Subscribe'
    root[(SubscribeRequest.typecode.nspname,SubscribeRequest.typecode.pname)] = 'soap_Subscribe'

    def soap_Renew(self, ps):
        self.request = ps.Parse(RenewRequest.typecode)
        return RenewResponse()

    soapAction['http://oscars.es.net/OSCARS/Renew'] = 'soap_Renew'
    root[(RenewRequest.typecode.nspname,RenewRequest.typecode.pname)] = 'soap_Renew'

    def soap_Unsubscribe(self, ps):
        self.request = ps.Parse(UnsubscribeRequest.typecode)
        return UnsubscribeResponse()

    soapAction['http://oscars.es.net/OSCARS/Unsubscribe'] = 'soap_Unsubscribe'
    root[(UnsubscribeRequest.typecode.nspname,UnsubscribeRequest.typecode.pname)] = 'soap_Unsubscribe'

    def soap_PauseSubscription(self, ps):
        self.request = ps.Parse(PauseSubscriptionRequest.typecode)
        return PauseSubscriptionResponse()

    soapAction['http://oscars.es.net/OSCARS/PauseSubscription'] = 'soap_PauseSubscription'
    root[(PauseSubscriptionRequest.typecode.nspname,PauseSubscriptionRequest.typecode.pname)] = 'soap_PauseSubscription'

    def soap_ResumeSubscription(self, ps):
        self.request = ps.Parse(ResumeSubscriptionRequest.typecode)
        return ResumeSubscriptionResponse()

    soapAction['http://oscars.es.net/OSCARS/ResumeSubscription'] = 'soap_ResumeSubscription'
    root[(ResumeSubscriptionRequest.typecode.nspname,ResumeSubscriptionRequest.typecode.pname)] = 'soap_ResumeSubscription'

    def soap_RegisterPublisher(self, ps):
        self.request = ps.Parse(RegisterPublisherRequest.typecode)
        return RegisterPublisherResponse()

    soapAction['http://oscars.es.net/OSCARS/RegisterPublisher'] = 'soap_RegisterPublisher'
    root[(RegisterPublisherRequest.typecode.nspname,RegisterPublisherRequest.typecode.pname)] = 'soap_RegisterPublisher'

    def soap_DestroyRegistration(self, ps):
        self.request = ps.Parse(DestroyRegistrationRequest.typecode)
        return DestroyRegistrationResponse()

    soapAction['http://oscars.es.net/OSCARS/DestroyRegistration'] = 'soap_DestroyRegistration'
    root[(DestroyRegistrationRequest.typecode.nspname,DestroyRegistrationRequest.typecode.pname)] = 'soap_DestroyRegistration'

