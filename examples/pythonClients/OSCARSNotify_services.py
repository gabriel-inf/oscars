################################################## 
# OSCARSNotify_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from OSCARSNotify_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class OSCARSNotifyLocator:
    OSCARSNotify_address = "https://oscars-dev.es.net:9090/axis2/services/OSCARSNotify"
    def getOSCARSNotifyAddress(self):
        return OSCARSNotifyLocator.OSCARSNotify_address
    def getOSCARSNotify(self, url=None, **kw):
        return OSCARSNOTIFYSOAPSOAP(url or OSCARSNotifyLocator.OSCARSNotify_address, **kw)

# Methods
class OSCARSNOTIFYSOAPSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: Notify
    def Notify(self, request):
        if isinstance(request, Notify) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://oscars.es.net/OSCARS/Notify", **kw)
        #check for soap, assume soap:fault
        if self.binding.IsSOAP(): self.binding.Receive(None, **kw)

    # op: Subscribe
    def Subscribe(self, request):
        if isinstance(request, SubscribeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://oscars.es.net/OSCARS/Subscribe", **kw)
        # no output wsaction
        response = self.binding.Receive(SubscribeResponse.typecode)
        return response

    # op: Renew
    def Renew(self, request):
        if isinstance(request, RenewRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://oscars.es.net/OSCARS/Renew", **kw)
        # no output wsaction
        response = self.binding.Receive(RenewResponse.typecode)
        return response

    # op: Unsubscribe
    def Unsubscribe(self, request):
        if isinstance(request, UnsubscribeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://oscars.es.net/OSCARS/Unsubscribe", **kw)
        # no output wsaction
        response = self.binding.Receive(UnsubscribeResponse.typecode)
        return response

    # op: PauseSubscription
    def PauseSubscription(self, request):
        if isinstance(request, PauseSubscriptionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://oscars.es.net/OSCARS/PauseSubscription", **kw)
        # no output wsaction
        response = self.binding.Receive(PauseSubscriptionResponse.typecode)
        return response

    # op: ResumeSubscription
    def ResumeSubscription(self, request):
        if isinstance(request, ResumeSubscriptionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://oscars.es.net/OSCARS/ResumeSubscription", **kw)
        # no output wsaction
        response = self.binding.Receive(ResumeSubscriptionResponse.typecode)
        return response

    # op: RegisterPublisher
    def RegisterPublisher(self, request):
        if isinstance(request, RegisterPublisherRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://oscars.es.net/OSCARS/RegisterPublisher", **kw)
        # no output wsaction
        response = self.binding.Receive(RegisterPublisherResponse.typecode)
        return response

    # op: DestroyRegistration
    def DestroyRegistration(self, request):
        if isinstance(request, DestroyRegistrationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://oscars.es.net/OSCARS/DestroyRegistration", **kw)
        # no output wsaction
        response = self.binding.Receive(DestroyRegistrationResponse.typecode)
        return response

Notify = ns4.Notify_Dec().pyclass

SubscribeRequest = ns4.Subscribe_Dec().pyclass

SubscribeResponse = ns4.SubscribeResponse_Dec().pyclass

RenewRequest = ns4.Renew_Dec().pyclass

RenewResponse = ns4.RenewResponse_Dec().pyclass

UnsubscribeRequest = ns4.Unsubscribe_Dec().pyclass

UnsubscribeResponse = ns4.UnsubscribeResponse_Dec().pyclass

PauseSubscriptionRequest = ns4.PauseSubscription_Dec().pyclass

PauseSubscriptionResponse = ns4.PauseSubscriptionResponse_Dec().pyclass

ResumeSubscriptionRequest = ns4.ResumeSubscription_Dec().pyclass

ResumeSubscriptionResponse = ns4.ResumeSubscriptionResponse_Dec().pyclass

RegisterPublisherRequest = ns5.RegisterPublisher_Dec().pyclass

RegisterPublisherResponse = ns5.RegisterPublisherResponse_Dec().pyclass

DestroyRegistrationRequest = ns5.DestroyRegistration_Dec().pyclass

DestroyRegistrationResponse = ns5.DestroyRegistrationResponse_Dec().pyclass
