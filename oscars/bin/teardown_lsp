#!/usr/bin/perl

##############################################################################
# Copyright (c) 2006, The Regents of the University of California, through
# Lawrence Berkeley National Laboratory (subject to receipt of any required
# approvals from the U.S. Dept. of Energy). All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# (1) Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#
# (2) Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# (3) Neither the name of the University of California, Lawrence Berkeley
#     National Laboratory, U.S. Dept. of Energy nor the names of its
#     contributors may be used to endorse or promote products derived from
#     this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# You are under no obligation whatsoever to provide any bug fixes, patches,
# or upgrades to the features, functionality or performance of the source
# code ("Enhancements") to anyone; however, if you choose to make your
# Enhancements available either publicly, or directly to Lawrence Berkeley
# National Laboratory, without imposing a separate written license agreement
# for such Enhancements, then you hereby grant the following license: a
# non-exclusive, royalty-free perpetual license to install, use, modify,
# prepare derivative works, incorporate into other computer software,
# distribute, and sublicense such enhancements or derivative works thereof,
# in binary and source code form.
##############################################################################

use strict;
use Data::Dumper;

use OSCARS::Logger;
use OSCARS::Database;
use OSCARS::Library::Topology::Pathfinder;
use OSCARS::PSS::JnxLSP;
use NetLogger;

#####
#
# Constant definitions.
#
#####
use constant LSP_SETUP => 1;
use constant LSP_TEARDOWN => 0;


#####
#
# Global variables.
#
#####
my ($error);
my ($lspState);

my $len = scalar(@ARGV);
if ($len != 1) {
    print STDERR "Usage:\t\tteardown_lsp reservation_number\n";
    print STDERR "Example:\tteardown_lsp 518\n";
    exit;
}
my $reservation_number = $ARGV[0];

my $dbconn = OSCARS::Database->new();
$dbconn->connect('oscars');

my $pf = OSCARS::Library::Topology::Pathfinder->new('db' => $dbconn);
my $pssConfigs = $pf->getPSSConfiguration();

my $testConfigs = getReservationConfigs($dbconn, 'jnxLSP');

# Initialize LSP information.
my %lspInfo = (
  'name' => 'oscars_' . $reservation_number,
  'lsp_from' => $testConfigs->{ingress_loopback},
  'lsp_to' => $testConfigs->{egress_loopback},
  'bandwidth' => '1000000',
  'lsp_class-of-service' => $pssConfigs->{CoS},
  'policer_burst-size-limit' => $pssConfigs->{burstLimit},
  'source-address' => $testConfigs->{reservation_source},
  'destination-address' => $testConfigs->{reservation_destination},
);
print STDERR Dumper(%lspInfo);

# Create an LSP object.
$lspInfo{logger} = OSCARS::Logger->new('method' => 'teardown');
$lspInfo{logger}->set_level($NetLogger::INFO);
$lspInfo{logger}->setUserLogin('admin');
$lspInfo{logger}->open('teardown.log');
$lspInfo{db} = $dbconn;
my $jnxLsp = new OSCARS::PSS::JnxLSP(\%lspInfo);

# Tear down an LSP.
print("Tearing down LSP...\n");
$jnxLsp->configure_lsp(LSP_TEARDOWN, $lspInfo{logger});
$error = $jnxLsp->get_error();
if ($error) { print STDERR $error; }

print("LSP teardown complete\n");
print("\n");
$lspInfo{logger}->close();


###############################################################################
#
sub getReservationConfigs {
    my( $db, $testName ) = @_;

    my $statement = "SELECT * FROM configTestAddresses a " .
        "INNER JOIN configTests t ON a.testConfId = t.id WHERE t.name = ?";
    my $rows = $db->doSelect($statement, $testName);
    my $configs = {};
    for my $row (@$rows) {
        $configs->{$row->{description}} = $row->{address};
    }
    return $configs;
} #____________________________________________________________________________


