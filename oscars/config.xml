<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Specifies AAA packages, databases, and SOAP plugin packages used.
     In the future a url type may be supported (for a client call).
     All other configuration is in the given database.  -->
<configuration>

<!-- System variables -->
<user>oscars</user>
<namespace>http://oscars.es.net/OSCARS/Dispatcher</namespace>

<!-- Names of system and topology databases -->
<database name='system' location='oscars' /> 
<database name='topology' location='topology' /> 

<client name='default' uri='http://localhost:2000/OSCARS/Dispatcher'
	proxy='http://localhost:2000/Server' payloadSender='' />
<client payloadSender='discvenue.internet2.edu'
	uri='https://discvenue.internet2.edu/OSCARS/Dispatcher'
	proxy='https://discvenue.internet2.edu/OSCARS/Server'
	name='11537' />

<!-- AAA configuration.  The database value is a reference to the plugin
     (see below). -->

<plugin name='authentication' location='OSCARS::Library::AAA::AuthN' 
        type='package' database='system' />
<plugin name='authorization' location='OSCARS::Library::AAA::AuthZ' 
        type='package' database='system' />

<!-- Configuration of publicly described SOAP methods -->
<plugin name='queryReservation' location='OSCARS::Public::Reservation::Query' 
        type='package'/>
<plugin name='createReservation' location='OSCARS::Public::Reservation::Create'
        type='package'/>
<plugin name='modifyReservation' location='OSCARS::Public::Reservation::Modify'
        type='package'/>
<plugin name='cancelReservation' location='OSCARS::Public::Reservation::Cancel'
        type='package'/>
<plugin name='listReservations' location='OSCARS::Public::Reservation::List' 
        type='package'/>
<plugin name='forward' location='OSCARS::Public::Reservation::Forward' 
        type='package'/>
<plugin name='testForward' location='OSCARS::Public::Reservation::TestForward' 
        type='package'/>

<!-- Configuration of internal SOAP methods -->
<plugin name='userLogin' location='OSCARS::Public::User::Login'
        type='package' />
<plugin name='userLogout' location='OSCARS::Public::User::Logout'
        type='package'/>
<plugin name='userQuery' location='OSCARS::Public::User::Query'
        type='package'/>
<plugin name='userModify' location='OSCARS::Public::User::Modify'
        type='package'/>
<plugin name='institutionList' location='OSCARS::Public::Institution::List' 
        type='package'/>
<plugin name='userAdd' location='OSCARS::Internal::User::Add' type='package'/>
<plugin name='userRemove' location='OSCARS::Internal::User::Remove'
        type='package'/>
<plugin name='userList' location='OSCARS::Internal::User::List'
        type='package'/>
<plugin name='permissionList' location='OSCARS::Internal::Permission::List'
        type='package'/>
<plugin name='resourceList' location='OSCARS::Internal::Resource::List'
        type='package'/>
<plugin name='authorizationList' 
        location='OSCARS::Internal::Authorization::List' type='package'/>

<plugin name='reservationPending' 
        location='OSCARS::Internal::Reservation::Pending' type='package'/>
<plugin name='reservationExpired' 
        location='OSCARS::Internal::Reservation::Expired' type='package'/>
<plugin name='topologyUpdate' 
        location='OSCARS::Internal::Topology::Update' type='package'/>


<notification name='cancelReservation'>
    <subject>Reservation successfully cancelled</subject>
    <tag>Reservation tag</tag>
</notification>

<notification name='createReservation'>
    <subject>Reservation has been entered into the system</subject>
    <tag>Reservation tag</tag>
    <srcHost>Source</srcHost>
    <destHost>Destination</destHost>
    <description>Description</description>
    <startTime>Start time</startTime>
    <endTime>End time</endTime>
    <createdTime>Creation time</createdTime>
    <origTimeZone>Original time zone</origTimeZone>
    <bandwidth>Bandwidth</bandwidth>
    <burstLimit>Burst limit</burstLimit>
    <status>Status</status>
    <class>Class</class>
    <srcPort>Source port</srcPort>
    <destPort>Destination port</destPort>
    <dscp>DSCP</dscp>
    <protocol>Protocol</protocol>
    <path>Routers in path</path>
</notification>

<notification name='reservationPending'>
    <subject>Circuit set up</subject>
    <tag>Reservation tag</tag>
    <lspConfigTime>Path set up time</lspConfigTime>
    <lspStatus>Configuration status</lspStatus>
</notification>

<notification name='reservationExpired'>
    <subject>Circuit torn down</subject>
    <tag>Reservation tag</tag>
    <lspConfigTime>Path tear down time</lspConfigTime>
    <lspStatus>Configuration status</lspStatus>
</notification>

<notification name='userAdd'>
    <subject>OSCARS user added</subject>
</notification>

<notification name='permissionRemove'>
    <subject>Permission removed</subject>
</notification>

<notification name='resourceRemove'>
    <subject>Resource removed</subject>
</notification>

<notification name='authorizationRemove'>
    <subject>Authorization removed</subject>
</notification>

<notification name='testMessage'>
    <subject>Test message</subject>
    <msg>Test message</msg>
</notification>

</configuration>
